if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(ape, data.table, dplyr, rlang, this.path, treeio)
setwd(dirname(this.path()))
# https://lpmor22.github.io/ | 2025-06-04
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(ape, data.table, dplyr, rlang, this.path, treeio)
setwd(dirname(this.path()))
input <- "AKO_More80Cov.gisaid.aln.edited.nwk"
drop_tip <- c("EPI_ISL_11026046", "EPI_ISL_10101858", "EPI_ISL_9671457")
tree <- read.tree(input)
tree <- drop.tip(tree, drop_tip, trim.internal = TRUE)
write.tree(new_tree, file = sub("\\.nwk$", "-droped.nwk", input), append = FALSE)
p_load(ape, data.table, dplyr, rlang, this.path, treeio)
setwd(dirname(this.path()))
input <- "AKO_More80Cov.gisaid.aln.edited.nwk"
drop_tip <- c("EPI_ISL_11026046", "EPI_ISL_10101858", "EPI_ISL_9671457")
tree <- read.tree(input)
tree <- drop.tip(tree, drop_tip, trim.internal = TRUE)
write.tree(new_tree, file = sub("\\.nwk$", "-droped.nwk", input), append = FALSE)
write.tree(tree, file = sub("\\.nwk$", "-droped.nwk", input), append = FALSE)
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(ggplot2, ggtree, phangorn, readxlthis.path)
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(ggplot2, ggtree, phangorn, readxlthis.path)
p_load(ggplot2, ggtree, phangorn, readxl, this.path)
setwd(dirname(this.path()))
input1 <- "AKO_More80Cov.aln.edited.nwk"
input2 <- "AKO_More80Cov.metadata.xlsx"
tree <- read.tree(input1)
metadata <- read_excel(input2)
input1 <- "AKO_More80Cov.aln.edited.nwk"
input2 <- "AKO_More80Cov.aln.edited.xlsx"
tree <- read.tree(input1)
metadata <- read_excel(input2)
tree <- midpoint(tree)
tree <- reorder(tree)
tree <- ladderize(tree)
tree <- ggtree(tree, size = .4, color = "#8c8fae", ladderize = FALSE) +
geom_rootedge(rootedge = .00001, size = .4)
tree <- tree %<+% metadata + geom_tippoint(aes(color = group2), shape = 19, size = 6,
show.legend = TRUE) +
scale_color_manual(na.translate = FALSE, values = c(
"#660033",
"#9A6348",
"#D79B7D",
"#C0C741",
"#647D34",
"#E4943A",
"#CC3333",
"#D26471",
"#70377F",
"#7EC4C1",
"#34859D",
"#17434B",
"#441A3F",
"#584563",
"#C2C2DA"))
save_plot(sub("\\.nwk$", ".pdf", input1), tree, base_height = 4, base_width = 8)
p_load(ggplot2, ggtree, phangorn, readxl, this.path, tidyr)
save_plot(sub("\\.nwk$", ".pdf", input1), tree, base_height = 4, base_width = 8)
# https://lpmor22.github.io/ | 2025-06-03
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(ggplot2, this.path, tidyr)
setwd(dirname(this.path()))
input <- "KhouriousTeam2025.csv"
df <- read.csv(input, header = TRUE)
acts <- c("Ricardo Khouri", "Valdomiro Moitinho", "Maria da Purificacao",
"Laise de Moraes", "Lia Barbara Arruda", "Cibele Orge",
"Luciane Amorim", "Lucas Campos", "Camila Brito", "Felipe Torres",
"Lucas Gentil","Lais Cambui", "Marcos Braz", "Isabele Carvalho",
"Thaline Mabel Santos", "Victoria Ribeiro", "Kleverton Ribeiro",
"Debora Magnavita", "Jessica Duarte", "Raphael Borges", "Marina Cucco",
"Ellen Pimentel", "Luisa Pedrosa", "Lilian Gomes", "Raphaela Andrade",
"Jose Adriano Silva", "Agatha Morais", "Ana Carolina Lima",
"Beatriz Vasconcelos", "Giulia Botelho", "Igor Silveira",
"Joyce Silva", "Icaro Strobel", "Clara Porto", "Dhara Isabella Silva",
"Laura Barreto", "Jessica Lais Santos", "Caio Galiano"
)
els <- c("PI", "Research Associate", "Ph.D. student", "pre-Ph.D. student",
"M.Sc. student", "pre-M.Sc. student", "Undergraduated student",
"Technician"
)
actcols <- c("#FA4749", "#EF8CC8", "#79E16F", "#39A638", "#2C872D",
"#19ADFF", "#193BFF", "#907AFF")
gantt <- gather(df, "state", "date", 4:5) %>%
mutate(date = as.Date(date, "%Y.%m.%d"),
a2 = factor(a2, acts[length(acts):1]),
a3 = factor(a3, els))
gantt_chart <- ggplot(gantt, aes(date, a2, colour = a3)) +
geom_line(linewidth = 3) +
scale_color_manual(values = actcols) +
theme_classic() +
scale_x_date(limits = c(as.Date("2015-01-01"), NA),
expand = c(0, 0), breaks = "1 year", date_labels = "%Y") +
theme(panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(linetype = "dashed", size = .5),
panel.grid.minor = element_line(linetype = "dashed", size = .5),
axis.line = element_line(colour = "#000000"),
legend.position = c(.21, .3),
legend.title = element_blank(),
legend.background = element_rect(size = .5,
linetype = "solid",
colour = "#BEBEBE")) +
labs(x = NULL, y = NULL)
save_plot(sub("\\.csv$", ".pdf", input), gantt_chart, base_height = 5, base_width = 10)
save_plot(sub("\\.nwk$", ".pdf", input1), tree, base_height = 4, base_width = 8)
# https://lpmor22.github.io/ | 2025-06-04
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(ggplot2, ggtree, phangorn, readxl, this.path, tidyr)
setwd(dirname(this.path()))
input1 <- "AKO_More80Cov.aln.edited.nwk"
input2 <- "AKO_More80Cov.aln.edited.xlsx"
tree <- read.tree(input1)
metadata <- read_excel(input2)
tree <- midpoint(tree)
tree <- reorder(tree)
tree <- ladderize(tree)
tree <- ggtree(tree, size = .4, color = "#8c8fae", ladderize = FALSE) +
geom_rootedge(rootedge = .00001, size = .4)
tree <- tree %<+% metadata + geom_tippoint(aes(color = group2), shape = 19, size = 6,
show.legend = TRUE) +
scale_color_manual(na.translate = FALSE, values = c(
"#660033",
"#9A6348",
"#D79B7D",
"#C0C741",
"#647D34",
"#E4943A",
"#CC3333",
"#D26471",
"#70377F",
"#7EC4C1",
"#34859D",
"#17434B",
"#441A3F",
"#584563",
"#C2C2DA"))
save_plot(sub("\\.nwk$", ".pdf", input1), tree, base_height = 4, base_width = 8)
p_load(cowplot, ggplot2, ggtree, phangorn, readxl, this.path, tidyr)
save_plot(sub("\\.nwk$", ".pdf", input1), tree, base_height = 4, base_width = 8)
# https://lpmor22.github.io/ | 2025-06-04
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(cowplot, ggplot2, ggtree, phangorn, readxl, this.path, tidyr)
setwd(dirname(this.path()))
input1 <- "AKO_More80Cov.aln.edited.nwk"
input2 <- "AKO_More80Cov.aln.edited.xlsx"
tree <- read.tree(input1)
metadata <- read_excel(input2)
tree <- midpoint(tree)
tree <- reorder(tree)
tree <- ladderize(tree)
tree <- ggtree(tree, size = .4, color = "#8c8fae", ladderize = FALSE) +
geom_rootedge(rootedge = .00001, size = .4)
tree <- tree %<+% metadata +
geom_tippoint(aes(color = group2),
shape = 19, size = 6, show.legend = TRUE) +
scale_color_manual(na.translate = FALSE,
values = c(
"#660033",
"#9A6348",
"#D79B7D",
"#C0C741",
"#647D34",
"#E4943A",
"#CC3333",
"#D26471",
"#70377F",
"#7EC4C1",
"#34859D",
"#17434B",
"#441A3F",
"#584563",
"#C2C2DA"
)
)
save_plot(sub("\\.nwk$", ".pdf", input1), tree, base_height = 4, base_width = 8)
save_plot(sub("\\.nwk$", ".png", input1), tree, base_height = 4, base_width = 8)
# https://lpmor22.github.io/ | 2025-06-04
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(cowplot, ggplot2, ggtree, phangorn, readxl, this.path, tidyr)
setwd(dirname(this.path()))
input1 <- "AKO_More80Cov.aln.edited.nwk"
input2 <- "AKO_More80Cov.aln.edited.xlsx"
tree <- read.tree(input1)
metadata <- read_excel(input2)
tree <- midpoint(tree)
tree <- reorder(tree)
tree <- ladderize(tree)
tree <- ggtree(tree, size = .4, color = "#8c8fae", ladderize = FALSE) +
geom_rootedge(rootedge = .00001, size = .4)
tree <- tree %<+% metadata +
geom_tippoint(aes(color = group2),
shape = 19, size = 4, show.legend = TRUE) +
scale_color_manual(na.translate = FALSE,
values = c(
"#660033",
"#9A6348",
"#D79B7D",
"#C0C741",
"#647D34",
"#E4943A",
"#CC3333",
"#D26471",
"#70377F",
"#7EC4C1",
"#34859D",
"#17434B",
"#441A3F",
"#584563",
"#C2C2DA"
)
)
save_plot(sub("\\.nwk$", ".pdf", input1), tree, base_height = 4, base_width = 8)
save_plot(sub("\\.nwk$", ".png", input1), tree, base_height = 4, base_width = 8)
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(cowplot, ggplot2, ggtree, phangorn, readxl, this.path, tidyr)
setwd(dirname(this.path()))
input1 <- "AKO_More80Cov.gisaid.aln.edited.timetree.nwk"
input2 <- "AKO_More80Cov.gisaid.aln.edited.timetree.xlsx"
tree <- read.tree(input1)
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(cowplot, ggplot2, ggtree, phangorn, readxl, this.path, tidyr)
setwd(dirname(this.path()))
input1 <- "AKO_More80Cov.gisaid.aln.edited.timetree.nwk"
input2 <- "AKO_More80Cov.gisaid.aln.edited.timetree.xlsx"
tree <- read.tree(input1)
metadata <- read_excel(input2)
tree <- ggtree(tree, mrsd = "2022-03-14", as.Date = FALSE, size = .4, color = "#8c8fae") +
theme_tree2() + geom_rootedge(rootedge = .01, linewidth = .4)
tree <- tree %<+% metadata + geom_tippoint(aes(color = group2), shape = 19, size = 4,
show.legend = TRUE) +
scale_color_manual(na.translate = FALSE, values = c(
"#660033",
"#9A6348",
"#D79B7D",
"#C0C741",
"#647D34",
"#E4943A",
"#CC3333",
"#D26471",
"#70377F",
"#7EC4C1",
"#34859D",
"#17434B",
"#441A3F",
"#584563",
"#C2C2DA")) +
scale_x_ggtree(breaks = c(
2021.6657534246576,
2021.7479452054795,
2021.8328767123287,
2021.9150684931508,
2022.0000000000000,
2022.0849315068492,
2022.1616438356164), labels = c(
"Sep/2021",
"Oct/2021",
"Nov/2021",
"Dez/2021",
"Jan/2022",
"Fev/2022",
"Mar/2022"))
# https://lpmor22.github.io/ | 2025-06-04
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(cowplot, ggplot2, ggtree, phangorn, readxl, this.path, tidyr)
setwd(dirname(this.path()))
input1 <- "AKO_More80Cov.gisaid.aln.edited.timetree.nwk"
input2 <- "AKO_More80Cov.gisaid.aln.edited.timetree.xlsx"
tree <- read.tree(input1)
metadata <- read_excel(input2)
tree <- ggtree(tree, mrsd = "2022-03-14", as.Date = FALSE, size = .4, color = "#8c8fae") +
theme_tree2() + geom_rootedge(rootedge = .01, linewidth = .4)
tree <- tree %<+% metadata + geom_tippoint(aes(color = group2), shape = 19, size = 4,
show.legend = TRUE) +
scale_color_manual(na.translate = FALSE, values = c(
"#660033",
"#9A6348",
"#D79B7D",
"#C0C741",
"#647D34",
"#E4943A",
"#CC3333",
"#D26471",
"#70377F",
"#7EC4C1",
"#34859D",
"#17434B",
"#441A3F",
"#584563",
"#C2C2DA")) +
scale_x_ggtree(breaks = c(
2021.6657534246576,
2021.7479452054795,
2021.8328767123287,
2021.9150684931508,
2022.0000000000000,
2022.0849315068492,
2022.1616438356164), labels = c(
"Sep/2021",
"Oct/2021",
"Nov/2021",
"Dez/2021",
"Jan/2022",
"Fev/2022",
"Mar/2022"
)
)
save_plot(sub("\\.nwk$", ".pdf", input1), tree, base_height = 12, base_width = 8)
save_plot(sub("\\.nwk$", ".png", input1), tree, base_height = 12, base_width = 8)
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
p_load(cowplot, ggplot2, ggtree, phangorn, readxl, this.path, tidyr)
if (!require("read.gb"))
devtools::install_github("lpmor22/read.gb")
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
if (!requireNamespace("read.gb", quietly = TRUE))
devtools::install_github("lpmor22/read.gb")
p_load(countrycode, parallel, read.gb, rstudioapi, seqinr, this.path, writexl)
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
if (!requireNamespace("read.gb", quietly = TRUE))
devtools::install_github("lpmor22/read.gb")
p_load(countrycode, parallel, read.gb, rstudioapi, seqinr, this.path, writexl)
# https://lpmor22.github.io/ | 2025-06-04
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
if (!requireNamespace("read.gb", quietly = TRUE))
devtools::install_github("lpmor22/read.gb")
p_load(countrycode, parallel, read.gb, seqinr, this.path, writexl)
input <- "Zika_GenBank_after_2019-11-30.gb"
n_threads <- detectCores() - 1
cluster <- makeCluster(n_threads)
clusterEvalQ(cluster, {library(read.gb)})
gb <- readLines(input)
# https://lpmor22.github.io/ | 2025-06-04
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
if (!requireNamespace("read.gb", quietly = TRUE))
devtools::install_github("lpmor22/read.gb")
p_load(countrycode, parallel, read.gb, seqinr, this.path, writexl)
input <- "Zika_GenBank_after_2019-11-30.gb"
n_threads <- detectCores() - 1
cluster <- makeCluster(n_threads)
clusterEvalQ(cluster, {library(read.gb)})
gb <- readLines(input)
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
if (!requireNamespace("read.gb", quietly = TRUE))
devtools::install_github("lpmor22/read.gb")
p_load(countrycode, parallel, read.gb, seqinr, this.path, writexl)
input <- "Zika_GenBank_after_2019-11-30.gb"
n_threads <- detectCores() - 1
cluster <- makeCluster(n_threads)
clusterEvalQ(cluster, {library(read.gb)})
gb <- readLines(input)
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
if (!requireNamespace("read.gb", quietly = TRUE))
devtools::install_github("lpmor22/read.gb")
p_load(countrycode, parallel, read.gb, seqinr, this.path, writexl)
input <- "Zika_GenBank_after_2019-11-30.gb"
# https://lpmor22.github.io/ | 2025-06-04
if (!requireNamespace("pacman", quietly = TRUE))
install.packages("pacman", dependencies = TRUE)
library("pacman")
if (!requireNamespace("read.gb", quietly = TRUE))
devtools::install_github("lpmor22/read.gb")
p_load(countrycode, parallel, read.gb, seqinr, this.path, writexl)
setwd(dirname(this.path()))
input <- "Zika_GenBank_after_2019-11-30.gb"
n_threads <- detectCores() - 1
cluster <- makeCluster(n_threads)
clusterEvalQ(cluster, {library(read.gb)})
gb <- readLines(input)
gb_start <- grep("^LOCUS", gb)
gb_end <- grep("^//$", gb)
gb_temp <- mapply(function(x,y) gb[x:y], gb_start, gb_end)
gb_rec <- gb_temp[sapply(gb_temp, function(rec) {
locus_line <- rec[1]
!grepl(" rc", locus_line) || as.numeric(gsub(".* (\\d+) rc.*", "\\1", locus_line)) > 2
})]
start_time <- Sys.time()
read_gb <- unlist(parLapply(cluster, gb_rec, function(part) {
tmpfile <- tempfile()
writeLines(part, tmpfile)
gb <- read.gb(tmpfile, DNA = TRUE, Type = "full", Source = "File")
file.remove(tmpfile)
return(gb)}), recursive = FALSE)
end_time <- Sys.time()
end_time - start_time
stopCluster(cluster)
extract_gb <- function(x) {
locus <- strsplit(x[[1]], " ")[[1]]
data.frame(accession = locus[1], length = locus[2])}
df <- do.call(rbind, lapply(extract.gb(read_gb, "LOCUS"), extract_gb))
extract_gb <- function(x) {
location <- x$source$Location
qualifier <- x$source$Qualifier
var <- c("organism",
"isolate",
"isolation_source",
"host",
"country",
"collection_date",
"note",
"serotype")
data <- sapply(var, function(x) {
if (x %in% location) {
if (x == "host") {
host_raw <- qualifier[which(location == x)]
host_edited <- sub(";.*", "", host_raw)
return(host_edited)}
else if (x == "collection_date") {
date_raw <- qualifier[which(location == x)]
date_edited <- gsub(",.*", "", date_raw)
date_edited <- gsub("\\s+", "", date_edited)
return(date_edited)}
else {
return(qualifier[which(location == x)])}}
else {
return(NA)}})
return(data.frame(t(data)))}
temp <- do.call(rbind, lapply(extract.gb(read_gb, "source"), extract_gb))
df <- cbind(df, temp)
extract_gb <- function(x) {
return(data.frame(fasta = paste(x$ORIGIN, collapse = '')))}
temp <- do.call(rbind, lapply(extract.gb(read_gb, "ORIGIN"), extract_gb))
df <- cbind(df, temp)
rownames(df) <- NULL
names(df)[which(names(df) == "country")] <- "country_original"
df$country <- sub(":.*", "", df$country_original)
df$country_code <- countrycode(df$country, origin = "country.name", destination = "iso3c", warn = FALSE)
names(df)[which(names(df) == "collection_date")] <- "collection_date_original"
date_edited <- function(date) {
if (grepl("^\\d{2}-\\w{3}-\\d{4}$", date)) {
return(format(as.Date(date, "%d-%b-%Y"), "%Y-%m-%d"))}
else if (grepl("^\\w{3}-\\d{4}$", date)) {
return(paste(format(as.Date(paste("01", date, sep = "-"), "%d-%b-%Y"), "%Y-%m"), "XX", sep = "-"))}
else if (grepl("^\\d{4}$", date)) {
return(paste(date, "XX", "XX", sep = "-"))}
else {
return(date)}}
df$collection_date <- sapply(df$collection_date_original, date_edited)
names(df)[names(df) == "serotype"] <- "genotype"
get_genotype <- function(note) {
if (grepl("genotype:", note)) {
genotype <- strsplit(note, ": ")[[1]][2]
genotype <- sub(",.*", "", genotype)
return(genotype)}
else {
return(NA)}}
df$genotype <- ifelse(is.na(df$genotype), sapply(df$note, get_genotype), df$genotype)
df <- df[, !names(df) %in% "note"]
df <- df[, c("accession",
"length",
"isolate",
"isolation_source",
"host",
"organism",
"genotype",
"country_original",
"country",
"country_code",
"collection_date_original",
"collection_date",
"fasta")]
df$isolate <- sapply(df$isolate, paste, collapse = "")
df$isolation_source <- sapply(df$isolation_source, paste, collapse = "")
df$host <- sapply(df$host, paste, collapse = "")
df$organism <- sapply(df$organism, paste, collapse = "")
df$genotype <- sapply(df$genotype, paste, collapse = "")
df$country_original <- sapply(df$country_original, paste, collapse = "")
df$collection_date_original <- sapply(df$collection_date_original, paste, collapse = "")
write_xlsx(df, sub("\\.gb$", ".xlsx", input))
fasta_sequence <- as.list(as.character(df$fasta))
fasta_header <- as.character(df$accession)
write.fasta(sequences = fasta_sequence, names = fasta_header, file.out = sub("\\.gb$", ".fasta", input))
