#!/bin/bash

while getopts ":i:l:s:t:" opt; do
        case $opt in
                i ) INPUT="$OPTARG";;
                l ) LEVEL="$OPTARG";;
                t ) THREADS="$OPTARG";;
        esac
done
shift $((OPTIND -1))

# LEVEL dep = install conda + mamba + enviroments + subread + r packages
# LEVEL assembly = CHIKV + DENV + ZIKV assembly

MYSHELL=$(echo $SHELL | awk -F/ '{print $NF}')

if [[ -z "$THREADS" ]]; then
    THREADS="$(lscpu | grep 'CPU(s):' | awk '{print $2}' | sed -n '1p')"
fi

if [[ "$LEVEL" = "dep" ]]; then
    if [[ -z "$(which conda)" ]]; then
        cd
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
        bash Miniconda3-latest-Linux-x86_64.sh -bfp miniconda3
        rm Miniconda3-latest-Linux-x86_64.sh
        echo 'export PATH=$HOME/miniconda3/bin:/usr/local/share/rsi/idl/bin:$PATH' >> $HOME/.${MYSHELL}rc
        export PATH=$HOME/miniconda3/bin:/usr/local/share/rsi/idl/bin:$PATH
        conda install -y -c conda-forge mamba
        mamba update -y -c conda-forge -c anaconda -c bioconda -c defaults -n base conda
        mamba create -y -n plot -c conda-forge -c anaconda -c bioconda -c defaults ghostscript numpy pandas pysam seaborn
        mamba create -y -n rnaseq_assembly -c conda-forge -c anaconda -c bioconda -c defaults bwa entrez-direct exonerate ivar minimap2 samtools
    else
        if [[ -z "$(which mamba)" ]]; then
            conda install -y -c conda-forge mamba
            mamba update -y -c conda-forge -c anaconda -c bioconda -c defaults -n base conda
            if [[ -z "$(conda env list | grep "r|rnaseq")" ]]; then
                mamba create -y -n plot -c conda-forge -c anaconda -c bioconda -c defaults ghostscript numpy pandas pysam seaborn
                mamba create -y -n rnaseq_assembly -c conda-forge -c anaconda -c bioconda -c defaults bwa entrez-direct exonerate ivar minimap2 samtools
            else
                mamba update -y -n plot -c conda-forge -c anaconda -c bioconda -c defaults --all
                mamba update -y -n rnaseq_assembly -c conda-forge -c anaconda -c bioconda -c defaults --all
            fi
        else
            mamba update -y -c conda-forge -c anaconda -c bioconda -c defaults -n base conda
            if [[ -z "$(conda env list | grep "r|rnaseq")" ]]; then
                mamba create -y -n plot -c conda-forge -c anaconda -c bioconda -c defaults ghostscript numpy pandas pysam seaborn
                mamba create -y -n rnaseq_assembly -c conda-forge -c anaconda -c bioconda -c defaults bwa entrez-direct exonerate ivar minimap2 samtools
            else
                mamba update -y -n plot -c conda-forge -c anaconda -c bioconda -c defaults --all
                mamba update -y -n rnaseq_assembly -c conda-forge -c anaconda -c bioconda -c defaults --all
            fi
        fi
    fi
    if [[ -z "$(which fastcov.py)" ]]; then
        cd
        git clone https://github.com/RaverJay/fastcov
        cd fastcov
        echo 'export PATH=$HOME/fastcov:/usr/local/share/rsi/idl/bin:$PATH' >> $HOME/.${MYSHELL}rc
        export PATH=$HOME/fastcov:/usr/local/share/rsi/idl/bin:$PATH
    else
        source activate plot
        fastcov.py --help
    fi
fi

bg() {

    start=$(date +%s.%N)

    if [[ -n "$INPUT" ]]; then
        RAWDIR="$INPUT"
        ANALYSIS="$RAWDIR"/ANALYSIS
        if [[ ! -d "$ANALYSIS" ]]; then
            mkdir "$ANALYSIS" "$ANALYSIS"/REFERENCE
        fi
    fi

    if [[ "$LEVEL" = "assembly" ]]; then
        source activate rnaseq_assembly
        esearch -db nucleotide -query "NC_004162.2" | efetch -format fasta > "$ANALYSIS"/REFERENCE/CHIKV_NC_004162.2.fa
        esearch -db nucleotide -query "NC_001477.1" | efetch -format fasta > "$ANALYSIS"/REFERENCE/DENV1_NC_001477.1.fa
        esearch -db nucleotide -query "NC_001474.2" | efetch -format fasta > "$ANALYSIS"/REFERENCE/DENV2_NC_001474.2.fa
        esearch -db nucleotide -query "NC_001475.2" | efetch -format fasta > "$ANALYSIS"/REFERENCE/DENV3_NC_001475.2.fa
        esearch -db nucleotide -query "NC_002640.1" | efetch -format fasta > "$ANALYSIS"/REFERENCE/DENV4_NC_002640.1.fa
        esearch -db nucleotide -query "NC_035889.1" | efetch -format fasta > "$ANALYSIS"/REFERENCE/ZIKV_NC_035889.1.fa
        bwa index "$ANALYSIS"/REFERENCE/CHIKV_NC_004162.2.fa
        bwa index "$ANALYSIS"/REFERENCE/DENV1_NC_001477.1.fa
        bwa index "$ANALYSIS"/REFERENCE/DENV2_NC_001474.2.fa
        bwa index "$ANALYSIS"/REFERENCE/DENV3_NC_001475.2.fa
        bwa index "$ANALYSIS"/REFERENCE/DENV4_NC_002640.1.fa
        bwa index "$ANALYSIS"/REFERENCE/ZIKV_NC_035889.1.fa
        echo "SampleId#NumberReadsMapped#AverageDepth#Coverage10x#Coverage20x#Coverage100x#Coverage1000x" | \
        tr '#' '\t' > "$ANALYSIS"/ASSEMBLY.CHIKV.stats.txt
        echo "SampleId#NumberReadsMapped#AverageDepth#Coverage10x#Coverage20x#Coverage100x#Coverage1000x" | \
        tr '#' '\t' > "$ANALYSIS"/ASSEMBLY.DENV1.stats.txt
        echo "SampleId#NumberReadsMapped#AverageDepth#Coverage10x#Coverage20x#Coverage100x#Coverage1000x" | \
        tr '#' '\t' > "$ANALYSIS"/ASSEMBLY.DENV2.stats.txt
        echo "SampleId#NumberReadsMapped#AverageDepth#Coverage10x#Coverage20x#Coverage100x#Coverage1000x" | \
        tr '#' '\t' > "$ANALYSIS"/ASSEMBLY.DENV3.stats.txt
        echo "SampleId#NumberReadsMapped#AverageDepth#Coverage10x#Coverage20x#Coverage100x#Coverage1000x" | \
        tr '#' '\t' > "$ANALYSIS"/ASSEMBLY.DENV4.stats.txt
        echo "SampleId#NumberReadsMapped#AverageDepth#Coverage10x#Coverage20x#Coverage100x#Coverage1000x" | \
        tr '#' '\t' > "$ANALYSIS"/ASSEMBLY.ZIKV.stats.txt
        for i in $(find "$ANALYSIS"/RUNS_MERGED -type f -name "*.fastq.gz" | awk -F/ '{print $NF}' | awk -F_ '{print $1"_"$2}' | sort -u); do
            bwa mem -t "$THREADS" "$ANALYSIS"/REFERENCE/CHIKV_NC_004162.2.fa \
            "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R1.fastq.gz "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R2.fastq.gz | \
            samtools sort -@ "$THREADS" -o  "$ANALYSIS"/ASSEMBLY/"$i".CHIKV.sorted.bam -
            samtools view -@ "$THREADS" -h -F 4 -b  "$ANALYSIS"/ASSEMBLY/"$i".CHIKV.sorted.bam >  "$ANALYSIS"/ASSEMBLY/"$i".CHIKV.sorted.mapped.bam
            samtools index -@ "$THREADS"  "$ANALYSIS"/ASSEMBLY/"$i".CHIKV.sorted.mapped.bam
            samtools mpileup -A -B -Q 0 --reference  "$ANALYSIS"/REFERENCE/CHIKV_NC_004162.2.fa "$ANALYSIS"/ASSEMBLY/"$i".CHIKV.sorted.mapped.bam | \
            ivar consensus -p  "$ANALYSIS"/ASSEMBLY/"$i".CHIKV -n N -i "$i"
            echo -n "$i""#" | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.CHIKV.stats.txt
            samtools view -F 0x904 -c "$i".CHIKV.sorted.mapped.bam | awk '{printf $1"#"}' | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.CHIKV.stats.txt
            samtools depth "$i".CHIKV.sorted.mapped.bam | awk '{sum+=$3} END {print sum/NR}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.CHIKV.stats.txt
            paste <(samtools depth "$i".CHIKV.sorted.mapped.bam | awk '{if ($3 > '"10"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/CHIKV_NC_004162.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.CHIKV.stats.txt
            paste <(samtools depth "$i".CHIKV.sorted.mapped.bam | awk '{if ($3 > '"20"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/CHIKV_NC_004162.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.CHIKV.stats.txt
            paste <(samtools depth "$i".CHIKV.sorted.mapped.bam | awk '{if ($3 > '"100"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/CHIKV_NC_004162.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.CHIKV.stats.txt
            paste <(samtools depth "$i".CHIKV.sorted.mapped.bam | awk '{if ($3 > '"1000"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/CHIKV_NC_004162.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.CHIKV.stats.txt
            bwa mem -t "$THREADS" "$ANALYSIS"/REFERENCE/DENV1_NC_001477.1.fa \
            "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R1.fastq.gz "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R2.fastq.gz | \
            samtools sort -@ "$THREADS" -o  "$ANALYSIS"/ASSEMBLY/"$i".DENV1.sorted.bam -
            samtools view -@ "$THREADS" -h -F 4 -b  "$ANALYSIS"/ASSEMBLY/"$i".DENV1.sorted.bam >  "$ANALYSIS"/ASSEMBLY/"$i".DENV1.sorted.mapped.bam
            samtools index -@ "$THREADS"  "$ANALYSIS"/ASSEMBLY/"$i".DENV1.sorted.mapped.bam
            samtools mpileup -A -B -Q 0 --reference  "$ANALYSIS"/REFERENCE/DENV1_NC_001477.1.fa "$ANALYSIS"/ASSEMBLY/"$i".DENV1.sorted.mapped.bam | \
            ivar consensus -p  "$ANALYSIS"/ASSEMBLY/"$i".DENV1 -n N -i "$i"
            echo -n "$i""#" | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.DENV1.stats.txt
            samtools view -F 0x904 -c "$i".DENV1.sorted.mapped.bam | awk '{printf $1"#"}' | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.DENV1.stats.txt
            samtools depth "$i".DENV1.sorted.mapped.bam | awk '{sum+=$3} END {print sum/NR}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV1.stats.txt
            paste <(samtools depth "$i".DENV1.sorted.mapped.bam | awk '{if ($3 > '"10"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV1_NC_001477.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV1.stats.txt
            paste <(samtools depth "$i".DENV1.sorted.mapped.bam | awk '{if ($3 > '"20"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV1_NC_001477.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV1.stats.txt
            paste <(samtools depth "$i".DENV1.sorted.mapped.bam | awk '{if ($3 > '"100"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV1_NC_001477.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV1.stats.txt
            paste <(samtools depth "$i".DENV1.sorted.mapped.bam | awk '{if ($3 > '"1000"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV1_NC_001477.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV1.stats.txt
            bwa mem -t "$THREADS" "$ANALYSIS"/REFERENCE/DENV2_NC_001474.2.fa \
            "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R1.fastq.gz "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R2.fastq.gz | \
            samtools sort -@ "$THREADS" -o  "$ANALYSIS"/ASSEMBLY/"$i".DENV2.sorted.bam -
            samtools view -@ "$THREADS" -h -F 4 -b  "$ANALYSIS"/ASSEMBLY/"$i".DENV2.sorted.bam >  "$ANALYSIS"/ASSEMBLY/"$i".DENV2.sorted.mapped.bam
            samtools index -@ "$THREADS"  "$ANALYSIS"/ASSEMBLY/"$i".DENV2.sorted.mapped.bam
            samtools mpileup -A -B -Q 0 --reference  "$ANALYSIS"/REFERENCE/DENV2_NC_001474.2.fa "$ANALYSIS"/ASSEMBLY/"$i".DENV2.sorted.mapped.bam | \
            ivar consensus -p  "$ANALYSIS"/ASSEMBLY/"$i".DENV2 -n N -i "$i"
            echo -n "$i""#" | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.DENV2.stats.txt
            samtools view -F 0x904 -c "$i".DENV2.sorted.mapped.bam | awk '{printf $1"#"}' | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.DENV2.stats.txt
            samtools depth "$i".DENV2.sorted.mapped.bam | awk '{sum+=$3} END {print sum/NR}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV2.stats.txt
            paste <(samtools depth "$i".DENV2.sorted.mapped.bam | awk '{if ($3 > '"10"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV2_NC_001474.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV2.stats.txt
            paste <(samtools depth "$i".DENV2.sorted.mapped.bam | awk '{if ($3 > '"20"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV2_NC_001474.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV2.stats.txt
            paste <(samtools depth "$i".DENV2.sorted.mapped.bam | awk '{if ($3 > '"100"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV2_NC_001474.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV2.stats.txt
            paste <(samtools depth "$i".DENV2.sorted.mapped.bam | awk '{if ($3 > '"1000"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV2_NC_001474.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV2.stats.txt
            bwa mem -t "$THREADS" "$ANALYSIS"/REFERENCE/DENV3_NC_001475.2.fa \
            "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R1.fastq.gz "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R2.fastq.gz | \
            samtools sort -@ "$THREADS" -o  "$ANALYSIS"/ASSEMBLY/"$i".DENV3.sorted.bam -
            samtools view -@ "$THREADS" -h -F 4 -b  "$ANALYSIS"/ASSEMBLY/"$i".DENV3.sorted.bam >  "$ANALYSIS"/ASSEMBLY/"$i".DENV3.sorted.mapped.bam
            samtools index -@ "$THREADS"  "$ANALYSIS"/ASSEMBLY/"$i".DENV3.sorted.mapped.bam
            samtools mpileup -A -B -Q 0 --reference  "$ANALYSIS"/REFERENCE/DENV3_NC_001475.2.fa "$ANALYSIS"/ASSEMBLY/"$i".DENV3.sorted.mapped.bam | \
            ivar consensus -p  "$ANALYSIS"/ASSEMBLY/"$i".DENV3 -n N -i "$i"
            echo -n "$i""#" | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.DENV3.stats.txt
            samtools view -F 0x904 -c "$i".DENV3.sorted.mapped.bam | awk '{printf $1"#"}' | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.DENV3.stats.txt
            samtools depth "$i".DENV3.sorted.mapped.bam | awk '{sum+=$3} END {print sum/NR}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV3.stats.txt
            paste <(samtools depth "$i".DENV3.sorted.mapped.bam | awk '{if ($3 > '"10"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV3_NC_001475.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV3.stats.txt
            paste <(samtools depth "$i".DENV3.sorted.mapped.bam | awk '{if ($3 > '"20"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV3_NC_001475.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV3.stats.txt
            paste <(samtools depth "$i".DENV3.sorted.mapped.bam | awk '{if ($3 > '"100"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV3_NC_001475.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV3.stats.txt
            paste <(samtools depth "$i".DENV3.sorted.mapped.bam | awk '{if ($3 > '"1000"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV3_NC_001475.2.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV3.stats.txt
            bwa mem -t "$THREADS" "$ANALYSIS"/REFERENCE/DENV4_NC_002640.1.fa \
            "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R1.fastq.gz "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R2.fastq.gz | \
            samtools sort -@ "$THREADS" -o  "$ANALYSIS"/ASSEMBLY/"$i".DENV4.sorted.bam -
            samtools view -@ "$THREADS" -h -F 4 -b  "$ANALYSIS"/ASSEMBLY/"$i".DENV4.sorted.bam >  "$ANALYSIS"/ASSEMBLY/"$i".DENV4.sorted.mapped.bam
            samtools index -@ "$THREADS"  "$ANALYSIS"/ASSEMBLY/"$i".DENV4.sorted.mapped.bam
            samtools mpileup -A -B -Q 0 --reference  "$ANALYSIS"/REFERENCE/DENV4_NC_002640.1.fa "$ANALYSIS"/ASSEMBLY/"$i".DENV4.sorted.mapped.bam | \
            ivar consensus -p  "$ANALYSIS"/ASSEMBLY/"$i".DENV4 -n N -i "$i"
            echo -n "$i""#" | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.DENV4.stats.txt
            samtools view -F 0x904 -c "$i".DENV4.sorted.mapped.bam | awk '{printf $1"#"}' | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.DENV4.stats.txt
            samtools depth "$i".DENV4.sorted.mapped.bam | awk '{sum+=$3} END {print sum/NR}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV4.stats.txt
            paste <(samtools depth "$i".DENV4.sorted.mapped.bam | awk '{if ($3 > '"10"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV4_NC_002640.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV4.stats.txt
            paste <(samtools depth "$i".DENV4.sorted.mapped.bam | awk '{if ($3 > '"20"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV4_NC_002640.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV4.stats.txt
            paste <(samtools depth "$i".DENV4.sorted.mapped.bam | awk '{if ($3 > '"100"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV4_NC_002640.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV4.stats.txt
            paste <(samtools depth "$i".DENV4.sorted.mapped.bam | awk '{if ($3 > '"1000"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/DENV4_NC_002640.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.DENV4.stats.txt
            bwa mem -t "$THREADS" "$ANALYSIS"/REFERENCE/ZIKV_NC_035889.1.fa \
            "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R1.fastq.gz "$ANALYSIS"/RUNS_MERGED/"$i"_MERGED_R2.fastq.gz | \
            samtools sort -@ "$THREADS" -o  "$ANALYSIS"/ASSEMBLY/"$i".ZIKV.sorted.bam -
            samtools view -@ "$THREADS" -h -F 4 -b  "$ANALYSIS"/ASSEMBLY/"$i".ZIKV.sorted.bam >  "$ANALYSIS"/ASSEMBLY/"$i".ZIKV.sorted.mapped.bam
            samtools index -@ "$THREADS"  "$ANALYSIS"/ASSEMBLY/"$i".ZIKV.sorted.mapped.bam
            samtools mpileup -A -B -Q 0 --reference  "$ANALYSIS"/REFERENCE/ZIKV_NC_035889.1.fa "$ANALYSIS"/ASSEMBLY/"$i".ZIKV.sorted.mapped.bam | \
            ivar consensus -p  "$ANALYSIS"/ASSEMBLY/"$i".ZIKV -n N -i "$i"
            echo -n "$i""#" | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.ZIKV.stats.txt
            samtools view -F 0x904 -c "$i".ZIKV.sorted.mapped.bam | awk '{printf $1"#"}' | tr '#' '\t' >> "$ANALYSIS"/ASSEMBLY.ZIKV.stats.txt
            samtools depth "$i".ZIKV.sorted.mapped.bam | awk '{sum+=$3} END {print sum/NR}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.ZIKV.stats.txt
            paste <(samtools depth "$i".ZIKV.sorted.mapped.bam | awk '{if ($3 > '"10"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/ZIKV_NC_035889.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.ZIKV.stats.txt
            paste <(samtools depth "$i".ZIKV.sorted.mapped.bam | awk '{if ($3 > '"20"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/ZIKV_NC_035889.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.ZIKV.stats.txt
            paste <(samtools depth "$i".ZIKV.sorted.mapped.bam | awk '{if ($3 > '"100"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/ZIKV_NC_035889.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.ZIKV.stats.txt
            paste <(samtools depth "$i".ZIKV.sorted.mapped.bam | awk '{if ($3 > '"1000"') {print $0}}' | wc -l) \
            <(fastalength "$ANALYSIS"/REFERENCE/ZIKV_NC_035889.1.fa | awk '{print $1}') | \
            awk -F"\t" '{printf("%0.4f\n", $1/$2*100)}' | awk '{printf $1"#"}' | tr '#' '\t' \
            >> "$ANALYSIS"/ASSEMBLY.ZIKV.stats.txt
        done
        source activate plot
        for i in $(find "$ANALYSIS"/RUNS_MERGED -type f -name "*.fastq.gz" | awk -F/ '{print $NF}' | awk -F_ '{print $1"_"$2}' | sort -u); do
            fastcov.py -l "$ANALYSIS"/ASSEMBLY/"$i".CHIKV.sorted.mapped.bam -o "$ANALYSIS"/ASSEMBLY/"$i".CHIKV.coverage.pdf
            fastcov.py -l "$ANALYSIS"/ASSEMBLY/"$i".DENV1.sorted.mapped.bam -o "$ANALYSIS"/ASSEMBLY/"$i".DENV1.coverage.pdf
            fastcov.py -l "$ANALYSIS"/ASSEMBLY/"$i".DENV2.sorted.mapped.bam -o "$ANALYSIS"/ASSEMBLY/"$i".DENV2.coverage.pdf
            fastcov.py -l "$ANALYSIS"/ASSEMBLY/"$i".DENV3.sorted.mapped.bam -o "$ANALYSIS"/ASSEMBLY/"$i".DENV3.coverage.pdf
            fastcov.py -l "$ANALYSIS"/ASSEMBLY/"$i".DENV4.sorted.mapped.bam -o "$ANALYSIS"/ASSEMBLY/"$i".DENV4.coverage.pdf
            fastcov.py -l "$ANALYSIS"/ASSEMBLY/"$i".ZIKV.sorted.mapped.bam -o "$ANALYSIS"/ASSEMBLY/"$i".ZIKV.coverage.pdf
        done
        gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ANALYSIS"/ASSEMBLY.CHIKV.depth.pdf "$ANALYSIS"/ASSEMBLY/*.CHIKV.coverage.pdf
        gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ANALYSIS"/ASSEMBLY.DENV1.depth.pdf "$ANALYSIS"/ASSEMBLY/*.DENV1.coverage.pdf
        gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ANALYSIS"/ASSEMBLY.DENV2.depth.pdf "$ANALYSIS"/ASSEMBLY/*.DENV2.coverage.pdf
        gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ANALYSIS"/ASSEMBLY.DENV3.depth.pdf "$ANALYSIS"/ASSEMBLY/*.DENV3.coverage.pdf
        gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ANALYSIS"/ASSEMBLY.DENV4.depth.pdf "$ANALYSIS"/ASSEMBLY/*.DENV4.coverage.pdf
        gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ANALYSIS"/ASSEMBLY.ZIKV.depth.pdf "$ANALYSIS"/ASSEMBLY/*.ZIKV.coverage.pdf
    fi

    end=$(date +%s.%N)

    runtime=$(python -c "print(${end} - ${start})")

    echo "" && echo "Done. The runtime was $runtime seconds." && echo ""

}

bg $1 $2 $3 &>>RNASeq_CDZ-assembly_log.txt &
